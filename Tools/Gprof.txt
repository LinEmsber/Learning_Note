===============================================================================
                                GProf
===============================================================================

gprof is a type of tool called a profiler. Profiling allows you to learn where your program spent
its time and which functions called which other functions while it was executing. This information
can show you which pieces of your program are slower than you expected and might be candidates for
rewriting to make your program execute faster.

1. Compiling for profiling
> gcc -pg target_file.c -o target_file

-pg Generate extra code to write profile information suitable for the analysis program gprof.
You must use this option when compiling the source files you want data about, and you must also
use it when linking.

2. Creating gmon.out
Once your program has been compiled with profiling turned on, running the program to completion
causes a file named gmon.out to be created in the current directory. gprof works by analyzing data
collected during the execution of your program after your program has finished running. gmon.out
holds this data in a gprof-readable format.

a.
If gmon.out already exists, it will be overwritten.
b.
The program must exit normally. Pressing control-c or killing the process is not a normal exit.
c.
Since you are trying to analyze your program in a real-world situation, you should run the program
exactly the same way as you normally would.

3. Running gprof
> gprof -b target_file gmon.out > output_file



References:
Gprof man page
https://en.wikipedia.org/wiki/Gprof
https://web.eecs.umich.edu/~sugih/pointers/gprof_quick.html
https://www.maketecheasier.com/profile-c-program-linux-using-gprof/
