===============================================================================
                        Learning Website for Chemistry
===============================================================================

In computing and operating systems, a trap, also known as an exception or a fault, is typically
a type of synchronous interrupt typically caused by an exceptional condition (e.g., breakpoint,
division by zero, invalid memory access). A trap usually results in a switch to kernel mode,
wherein the operating system performs some action before returning control to the originating
process.

A trap in a system process is more serious than a trap in a user process, and in some systems
is fatal. In some usages, the term trap refers specifically to an interrupt intended to
initiate a context switch to a monitor program or debugger



A trap is an exception in a user process. It's caused by division by zero or invalid memory
access. It's also the usual way to invoke a kernel routine (a system call) because those run
with a higher priority than user code. Handling is synchronous (so the user code is suspended
and continues afterwards). In a sense they are "active" - most of the time, the code expects
the trap to happen and relies on this fact.

An interrupt is something generated by the hardware (devices like the hard disk, graphics
card, I/O ports, etc). These are asynchronous (i.e. they don't happen at predictable places
in the user code) or "passive" since the interrupt handler has to wait for them to happen
eventually.

You can also see a trap as a kind of CPU-internal interrupt since the handler for trap handler
looks like an interrupt handler (registers and stack pointers are saved, there is a context
switch, execution can resume in some cases where it left off).

reference:
https://en.wikipedia.org/wiki/Trap_(computing)

http://stackoverflow.com/questions/3149175/what-is-the-difference-between-trap-and-interrupt
